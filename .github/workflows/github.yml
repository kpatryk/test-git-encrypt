name: Test encryption and Github actions
on: [push]
jobs:
  Check-Worker-Status:
    runs-on: macos-latest
    steps:
      - name: Check initial status
        run: |
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Check repository status
        run: |
          echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
          echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Check version of the worker OS
        run: |
          echo "== Run sw_vers"
          sw_vers
          echo "== Run system_profiler"
          system_profiler SPSoftwareDataType
          echo "== Show kernel details"
          uname -av
          echo "== Show OS config files"
          ls /System/Library/CoreServices/*.plist
      - name: Check OS config
        run: |
          echo "== Check disk space"
          df -h
          echo "== Check memory usage"
          vm_stat | perl -ne '/page size of (\d+)/ and $size=$1; /Pages\s+([^:]+)[^\d]+(\d+)/ and printf("%-16s % 16.2f Mi\n", "$1:", $2 * $size / 1048576);'
          echo "== Check CPU"
          sysctl -a | grep machdep.cpu
      - name: Post-propcessing job status
        run: |
          echo "üçè This job's status is ${{ job.status }}."
  Check-Git-Crypt:
    runs-on: macos-latest
    steps:
      - name: Check secrets
        env:
          MY_ENV: ${{ secrets.MY_ENV }}
          MY_SECRET: ${{ secrets.MY_SECRET }}
        run: |
          set
          echo $MY_SECRET > secret.txt
          echo $MY_env > env.txt
          echo "== Start Content: "; cat secret.txt
          echo "==End"
          ls -l *.txt
      - name: Post-propcessing job status
        run: |
          echo "üçè This job's status is ${{ job.status }}."
